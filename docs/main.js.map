{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">MMMoatTagWrapper</mat-toolbar>\\r\\n<mat-card>\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Tag\\\" required #tag></textarea>\\r\\n  </mat-form-field>\\r\\n  <button mat-button (click)=\\\"getTag(tag.value)\\\" mat-raised-button color=\\\"primary\\\">Wrap Me!</button>\\r\\n  <mat-divider></mat-divider>\\r\\n  <table *ngIf=\\\"newTags\\\">\\r\\n    <tr>\\r\\n      <th>Old tag</th>\\r\\n      <th>New tag</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let newTag of newTags\\\">\\r\\n      <td>\\r\\n        {{newTag.originalTag}}\\r\\n      </td>\\r\\n      <td>https://svastx.moatads.com/mediamathvpaid176399725163/template.xml?level1=[AD_ATTR.advertiser]&level2=[AD_ATTR.campaign]&level3=[AD_ATTR.strategy]&level4=[AD_ATTR.creative]&slicer1=[BID_ATTR.site]&ad_width={{newTag.width}}&ad_height={{newTag.height}}&ad_title=MEDIAMATH_VPAID_Template_Title_Asset&ad_duration={{newTag.duration}}&zMoatBidId=[BID_ATTR.bid_id]&zMoatOrgID=[AD_ATTR.organization]&tmode=2&vast_url={{newTag.url}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</mat-card>\\r\\n\"","module.exports = \"table {\\n  text-align: left;\\n  width: 100%; }\\n  table td {\\n    /* These are technically the same, but use both */\\n    overflow-wrap: break-word;\\n    word-wrap: break-word;\\n    -ms-word-break: break-all;\\n    /* This is the dangerous one in WebKit, as it breaks things wherever */\\n    word-break: break-all;\\n    /* Instead use this non-standard one: */\\n    word-break: break-word;\\n    /* Adds a hyphen where the word breaks, if supported (No Blink) */\\n    -ms-hyphens: auto;\\n    -webkit-hyphens: auto;\\n    hyphens: auto; }\\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgxXml2jsonService } from 'ngx-xml2json';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  duration: string;\r\n  encodedDuration: string;\r\n  encodedUrl: string;\r\n  height: number;\r\n  width: number;\r\n  initTag: string;\r\n  newTags: any[];\r\n  // tslint:disable-next-line:max-line-length\r\n  xml = `<VAST xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"vast_2.0.1-creativeView.xsd\" version=\"2.0\"><Ad id=\"moat_ad\"><InLine><AdSystem>2.0</AdSystem><AdTitle>Vick_-_PG1_Vick_Winter_Janeiro_2018_Brazil-23562901</AdTitle><Impression/><Creatives><Creative><Linear><Duration>00:00:15</Duration><MediaFiles><MediaFile type=\"application/javascript\" apiFramework=\"VPAID\" height=\"360\" width=\"640\" delivery=\"progressive\"><![CDATA[https://svastx.moatads.com/iprospectpgbrazilsizmekvideo327190469710/moatwrapper.js#vast=https%3a%2f%2fbs.serving-sys.com%2fServing%3fcn%3ddisplay%26c%3d23%26pl%3dVAST%26pli%3d23562901%26PluID%3d0%26pos%3d5815%26ord%3d88178920%26cim%3d1&level1=851181&level2=MediaMath%20BR%20-%20ROS-Video&level3=23562901&level4=vpaid&slicer1=undefined&slicer2=undefined&pcode=iprospectpgbrazilsizmekvideo327190469710&spvb=1]]></MediaFile></MediaFiles></Linear></Creative></Creatives></InLine></Ad></VAST>`;\r\n  constructor(\r\n    private ngxXml2jsonService: NgxXml2jsonService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.init();\r\n    // tslint:disable-next-line:max-line-length\r\n    this.initTag = 'https://svastx.moatads.com/iprospectpgbrazilsizmekvideo327190469710/Vick_-_PG1_Vick_Winter_Janeiro_2018_Brazil-23562901_js.xml';\r\n  }\r\n\r\n  getTag(value): void {\r\n    if (value === '') {\r\n      return;\r\n    }\r\n    const baseTags = value.split('\\n');\r\n    this.newTags = [];\r\n    baseTags.forEach(tag => {\r\n      this.getConfig(tag).subscribe(data => {\r\n        const precessedTag = this.processTag(data);\r\n        this.newTags.push({\r\n          originalTag: tag,\r\n          url: encodeURIComponent(tag),\r\n          height: precessedTag.height,\r\n          width: precessedTag.width,\r\n          duration: precessedTag.duration\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  processTag(xml) {\r\n    const obj = this.parseXml(xml);\r\n    const mediaFile = obj.VAST.Ad.InLine.Creatives.Creative.Linear.MediaFiles.MediaFile;\r\n    let attributes = null;\r\n    this.duration = obj.VAST.Ad.InLine.Creatives.Creative.Linear.Duration;\r\n\r\n    if (mediaFile.length !== undefined) {\r\n      attributes = mediaFile.find(x => x['@attributes'].type === 'application/javascript')['@attributes'];\r\n    } else {\r\n      attributes = mediaFile['@attributes'];\r\n    }\r\n\r\n    this.height = attributes.height;\r\n    this.width = attributes.width;\r\n    this.encodedDuration = encodeURIComponent(this.duration);\r\n    return {\r\n      height: attributes.height,\r\n      width: attributes.width,\r\n      duration: encodeURIComponent(this.duration)\r\n    };\r\n  }\r\n  getConfig(url) {\r\n    const headers = new HttpHeaders({ 'Content-Type': 'text/xml' }).set(\r\n      'Accept',\r\n      'text/xml'\r\n    );\r\n    return this.http.get(url, { responseType: 'text' });\r\n  }\r\n\r\n  private init() {\r\n    const obj = this.parseXml(this.xml);\r\n    this.duration = obj.VAST.Ad.InLine.Creatives.Creative.Linear.Duration;\r\n    this.height =\r\n      obj.VAST.Ad.InLine.Creatives.Creative.Linear.MediaFiles.MediaFile[\r\n        '@attributes'\r\n      ].height;\r\n    this.width =\r\n      obj.VAST.Ad.InLine.Creatives.Creative.Linear.MediaFiles.MediaFile[\r\n        '@attributes'\r\n      ].width;\r\n    this.encodedDuration = encodeURIComponent(this.duration);\r\n  }\r\n\r\n  private parseXml(xml: string) {\r\n    const parser = new DOMParser();\r\n    const parsedXml = parser.parseFromString(xml, 'text/xml');\r\n    const obj = <any>this.ngxXml2jsonService.xmlToJson(parsedXml);\r\n    return obj;\r\n  }\r\n}\r\n","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule\r\n} from '@angular/material';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatInputModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}